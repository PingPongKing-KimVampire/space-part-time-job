# **하는 일 카테고리**
enum JobCategory {
  SERVING               # 서빙
  KITCHEN_ASSISTANT     # 주방보조/설거지
  CHEF                  # 주방장/조리사
  STORE_MANAGEMENT      # 매장관리/판매
  BEVERAGE_MAKING       # 음료 제조
  BAKING                # 베이킹
  CLEANING              # 업체 청소
  ERRANDS               # 심부름/소일거리
  FLYER_DISTRIBUTION    # 전단지 배포
  TUTORING              # 과외/학원
  SCHOOL_PICKUP_HELPER  # 등하원도우미
  CHILD_CARE            # 아이돌봄
  ELDER_CARE            # 어르신 돌봄
  HOUSEKEEPING          # 가사/집정리
  MOVING_ASSISTANCE     # 짐 옮기기
  PET_CARE              # 반려동물 돌봄
  CONVENIENCE_STORE     # 편의점
  OTHER                 # 기타
}

# **일하는 요일**
enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

# **아르바이트 공고의 일하는 기간 (단기 or 1개월 이상)**
enum WorkPeriodType {
  SHORT_TERM  # 단기
  LONG_TERM   # 1개월 이상
}

# **근무 시간 협의 가능 여부**
enum WorkTimeType {
  FLEXIBLE  # 협의 가능
  FIXED     # 고정 시간
}

# **급여 타입**
enum SalaryType {
  HOURLY     # 시급
  PER_TASK   # 건당
  MONTHLY    # 월급
}

# **근무 기간 입력 타입**
input WorkPeriodInput {
  type: WorkPeriodType!       # 단기/장기 여부
  dates: [String!]            # 단기 근무일 날짜 리스트 YYYY-MM-DD 형식
  days: [DayOfWeek!]          # 장기 근무일 요일 리스트
}

# **근무 시간 입력 타입**
input WorkTimeInput {
  type: WorkTimeType!         # 협의 가능/고정 여부
  startTime: String           # 시작 시간, HH:mm 형식
  endTime: String             # 종료 시간, HH:mm 형식
}

# **급여 입력 타입**
input SalaryInput {
  salaryType: SalaryType!     # 시급/건당/월급
  salaryAmount: Int!        # 급여 금액, 최저시급 이상
}

# **공고 생성 요청 입력 타입**
input CreateJobPostInput {
  title: String!                   # 공고 제목
  jobDescription: [JobCategory!]!  # 하는 일 카테고리
  workPeriod: WorkPeriodInput!     # 근무 기간
  workTime: WorkTimeInput!         # 근무 시간
  salary: SalaryInput!             # 급여 정보
  photos: [String!]                # 공고 이미지 리스트, URL형식
  detailedDescription: String!     # 공고 상세 설명
  addressName: String!             # 도로명 주소 or 지번 주소
}

# **응답용 근무 기간 타입**
type WorkPeriod {
  type: WorkPeriodType!  # 단기/장기 여부
  dates: [String!]       # 단기 근무일 날짜 리스트
  days: [DayOfWeek!]     # 장기 근무일 요일 리스트
}

# **응답용 근무 시간 타입**
type WorkTime {
  type: WorkTimeType!    # 협의 가능/고정 여부
  startTime: String      # 시작 시간
  endTime: String        # 종료 시간
}

# **응답용 급여 타입**
type Salary {
  salaryType: SalaryType!  # 시급/건당/월급
  salaryAmount: Int!     # 급여 금액
}

# **공고 응답 타입**
type JobPost {
  id: ID!                         # 공고 ID
  title: String!                  # 공고 제목
  jobDescription: [JobCategory!]! # 하는 일 카테고리
  workPeriod: WorkPeriod!         # 근무 기간
  workTime: WorkTime!             # 근무 시간
  salary: Salary!                 # 급여 정보
  photos: [String!]               # 공고 이미지 리스트
  detailedDescription: String!    # 공고 상세 설명
  addressName: String!            # 도로명 주소 or 지번 주소
}

# **동네 입력 타입**
input NeighborhoodInput {
  id: ID!  # 동네 ID
}

# **상주 동네 설정 입력 타입**
input SetResidentNeighborhoodInput {
  neighborhoods: [NeighborhoodInput!]! # 최대 3개 설정 가능
}

# **동네 타입**
type Neighborhood {
  id: ID!      # 동네 ID
  name: String! # 동네 이름 -> 일단 사용X(현재는 오류올것임)
}

# **사용자 타입**
type User {
  id: ID!                              # 사용자 ID
  nickname: String!                    # 닉네임
  phoneNumber: String!                 # 전화번호
  residentNeighborhood: [Neighborhood!] # 상주 동네 (최대 3개, 설정 안되어있을 때 null)
}

# **Mutation**
type Mutation {
  createJobPost(input: CreateJobPostInput!): JobPost              # 공고 생성
  setResidentNeighborhood(input: SetResidentNeighborhoodInput!): [Neighborhood!]! # 상주 동네 설정
}

# **Query**
type Query {
  getJobPost(id: ID!): JobPost # 공고 상세 조회
  me: User! #자신의 정보 조회
}